/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Yarp
{
	public class IVelocityControlRaw : IDisposable
	{
		private HandleRef swigCPtr;
		protected bool swigCMemOwn;

		internal IVelocityControlRaw(IntPtr cPtr, bool cMemoryOwn)
		{
			swigCMemOwn = cMemoryOwn;
			swigCPtr = new HandleRef(this, cPtr);
		}

		internal static HandleRef getCPtr(IVelocityControlRaw obj)
		{
			return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
		}

		~IVelocityControlRaw()
		{
			Dispose();
		}

		public virtual void Dispose()
		{
			lock (this)
			{
				if (swigCPtr.Handle != IntPtr.Zero && swigCMemOwn)
				{
					swigCMemOwn = false;
					yarpPINVOKE.delete_IVelocityControlRaw(swigCPtr);
				}
				swigCPtr = new HandleRef(null, IntPtr.Zero);
				GC.SuppressFinalize(this);
			}
		}

		public virtual bool getAxes(SWIGTYPE_p_int axis)
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_getAxes(swigCPtr, SWIGTYPE_p_int.getCPtr(axis));
			return ret;
		}

		public virtual bool setVelocityMode()
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_setVelocityMode(swigCPtr);
			return ret;
		}

		public virtual bool velocityMoveRaw(int j, double sp)
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_velocityMoveRaw__SWIG_0(swigCPtr, j, sp);
			return ret;
		}

		public virtual bool velocityMoveRaw(SWIGTYPE_p_double sp)
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_velocityMoveRaw__SWIG_1(swigCPtr, SWIGTYPE_p_double.getCPtr(sp));
			return ret;
		}

		public virtual bool setRefAccelerationRaw(int j, double acc)
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_setRefAccelerationRaw(swigCPtr, j, acc);
			return ret;
		}

		public virtual bool setRefAccelerationsRaw(SWIGTYPE_p_double accs)
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_setRefAccelerationsRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(accs));
			return ret;
		}

		public virtual bool getRefAccelerationRaw(int j, SWIGTYPE_p_double acc)
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_getRefAccelerationRaw(swigCPtr, j, SWIGTYPE_p_double.getCPtr(acc));
			return ret;
		}

		public virtual bool getRefAccelerationsRaw(SWIGTYPE_p_double accs)
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_getRefAccelerationsRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(accs));
			return ret;
		}

		public virtual bool stopRaw(int j)
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_stopRaw__SWIG_0(swigCPtr, j);
			return ret;
		}

		public virtual bool stopRaw()
		{
			bool ret = yarpPINVOKE.IVelocityControlRaw_stopRaw__SWIG_1(swigCPtr);
			return ret;
		}

	}
}