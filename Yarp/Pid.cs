/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Yarp
{
	public class Pid : IDisposable
	{
		private HandleRef swigCPtr;
		protected bool swigCMemOwn;

		internal Pid(IntPtr cPtr, bool cMemoryOwn)
		{
			swigCMemOwn = cMemoryOwn;
			swigCPtr = new HandleRef(this, cPtr);
		}

		internal static HandleRef getCPtr(Pid obj)
		{
			return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
		}

		~Pid()
		{
			Dispose();
		}

		public virtual void Dispose()
		{
			lock (this)
			{
				if (swigCPtr.Handle != IntPtr.Zero && swigCMemOwn)
				{
					swigCMemOwn = false;
					yarpPINVOKE.delete_Pid(swigCPtr);
				}
				swigCPtr = new HandleRef(null, IntPtr.Zero);
				GC.SuppressFinalize(this);
			}
		}

		public double kp
		{
			set
			{
				yarpPINVOKE.Pid_kp_set(swigCPtr, value);
			}
			get
			{
				double ret = yarpPINVOKE.Pid_kp_get(swigCPtr);
				return ret;
			}
		}

		public double kd
		{
			set
			{
				yarpPINVOKE.Pid_kd_set(swigCPtr, value);
			}
			get
			{
				double ret = yarpPINVOKE.Pid_kd_get(swigCPtr);
				return ret;
			}
		}

		public double ki
		{
			set
			{
				yarpPINVOKE.Pid_ki_set(swigCPtr, value);
			}
			get
			{
				double ret = yarpPINVOKE.Pid_ki_get(swigCPtr);
				return ret;
			}
		}

		public double max_int
		{
			set
			{
				yarpPINVOKE.Pid_max_int_set(swigCPtr, value);
			}
			get
			{
				double ret = yarpPINVOKE.Pid_max_int_get(swigCPtr);
				return ret;
			}
		}

		public double scale
		{
			set
			{
				yarpPINVOKE.Pid_scale_set(swigCPtr, value);
			}
			get
			{
				double ret = yarpPINVOKE.Pid_scale_get(swigCPtr);
				return ret;
			}
		}

		public double max_output
		{
			set
			{
				yarpPINVOKE.Pid_max_output_set(swigCPtr, value);
			}
			get
			{
				double ret = yarpPINVOKE.Pid_max_output_get(swigCPtr);
				return ret;
			}
		}

		public double offset
		{
			set
			{
				yarpPINVOKE.Pid_offset_set(swigCPtr, value);
			}
			get
			{
				double ret = yarpPINVOKE.Pid_offset_get(swigCPtr);
				return ret;
			}
		}

		public Pid()
			: this(yarpPINVOKE.new_Pid__SWIG_0(), true)
		{
		}

		public Pid(double kp, double kd, double ki, double int_max, double scale, double out_max)
			: this(yarpPINVOKE.new_Pid__SWIG_1(kp, kd, ki, int_max, scale, out_max), true)
		{
		}

		public void setMaxInt(double m)
		{
			yarpPINVOKE.Pid_setMaxInt(swigCPtr, m);
		}

		public void setMaxOut(double m)
		{
			yarpPINVOKE.Pid_setMaxOut(swigCPtr, m);
		}

	}
}