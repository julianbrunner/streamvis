/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Yarp
{
	public class IPositionControlRaw : IDisposable
	{
		private HandleRef swigCPtr;
		protected bool swigCMemOwn;

		internal IPositionControlRaw(IntPtr cPtr, bool cMemoryOwn)
		{
			swigCMemOwn = cMemoryOwn;
			swigCPtr = new HandleRef(this, cPtr);
		}

		internal static HandleRef getCPtr(IPositionControlRaw obj)
		{
			return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
		}

		~IPositionControlRaw()
		{
			Dispose();
		}

		public virtual void Dispose()
		{
			lock (this)
			{
				if (swigCPtr.Handle != IntPtr.Zero && swigCMemOwn)
				{
					swigCMemOwn = false;
					yarpPINVOKE.delete_IPositionControlRaw(swigCPtr);
				}
				swigCPtr = new HandleRef(null, IntPtr.Zero);
				GC.SuppressFinalize(this);
			}
		}

		public virtual bool getAxes(SWIGTYPE_p_int ax)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_getAxes(swigCPtr, SWIGTYPE_p_int.getCPtr(ax));
			return ret;
		}

		public virtual bool setPositionMode()
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_setPositionMode(swigCPtr);
			return ret;
		}

		public virtual bool positionMoveRaw(int j, double arg1)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_positionMoveRaw__SWIG_0(swigCPtr, j, arg1);
			return ret;
		}

		public virtual bool positionMoveRaw(SWIGTYPE_p_double refs)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_positionMoveRaw__SWIG_1(swigCPtr, SWIGTYPE_p_double.getCPtr(refs));
			return ret;
		}

		public virtual bool relativeMoveRaw(int j, double delta)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_relativeMoveRaw__SWIG_0(swigCPtr, j, delta);
			return ret;
		}

		public virtual bool relativeMoveRaw(SWIGTYPE_p_double deltas)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_relativeMoveRaw__SWIG_1(swigCPtr, SWIGTYPE_p_double.getCPtr(deltas));
			return ret;
		}

		public virtual bool checkMotionDoneRaw(int j, SWIGTYPE_p_bool flag)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_checkMotionDoneRaw__SWIG_0(swigCPtr, j, SWIGTYPE_p_bool.getCPtr(flag));
			return ret;
		}

		public virtual bool checkMotionDoneRaw(SWIGTYPE_p_bool flag)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_checkMotionDoneRaw__SWIG_1(swigCPtr, SWIGTYPE_p_bool.getCPtr(flag));
			return ret;
		}

		public virtual bool setRefSpeedRaw(int j, double sp)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_setRefSpeedRaw(swigCPtr, j, sp);
			return ret;
		}

		public virtual bool setRefSpeedsRaw(SWIGTYPE_p_double spds)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_setRefSpeedsRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(spds));
			return ret;
		}

		public virtual bool setRefAccelerationRaw(int j, double acc)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_setRefAccelerationRaw(swigCPtr, j, acc);
			return ret;
		}

		public virtual bool setRefAccelerationsRaw(SWIGTYPE_p_double accs)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_setRefAccelerationsRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(accs));
			return ret;
		}

		public virtual bool getRefSpeedRaw(int j, SWIGTYPE_p_double arg1)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_getRefSpeedRaw(swigCPtr, j, SWIGTYPE_p_double.getCPtr(arg1));
			return ret;
		}

		public virtual bool getRefSpeedsRaw(SWIGTYPE_p_double spds)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_getRefSpeedsRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(spds));
			return ret;
		}

		public virtual bool getRefAccelerationRaw(int j, SWIGTYPE_p_double acc)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_getRefAccelerationRaw(swigCPtr, j, SWIGTYPE_p_double.getCPtr(acc));
			return ret;
		}

		public virtual bool getRefAccelerationsRaw(SWIGTYPE_p_double accs)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_getRefAccelerationsRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(accs));
			return ret;
		}

		public virtual bool stopRaw(int j)
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_stopRaw__SWIG_0(swigCPtr, j);
			return ret;
		}

		public virtual bool stopRaw()
		{
			bool ret = yarpPINVOKE.IPositionControlRaw_stopRaw__SWIG_1(swigCPtr);
			return ret;
		}

	}
}