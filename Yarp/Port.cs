/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Yarp
{
	public class Port : Contactable
	{
		private HandleRef swigCPtr;

		internal Port(IntPtr cPtr, bool cMemoryOwn)
			: base(yarpPINVOKE.PortUpcast(cPtr), cMemoryOwn)
		{
			swigCPtr = new HandleRef(this, cPtr);
		}

		internal static HandleRef getCPtr(Port obj)
		{
			return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
		}

		~Port()
		{
			Dispose();
		}

		public override void Dispose()
		{
			lock (this)
			{
				if (swigCPtr.Handle != IntPtr.Zero && swigCMemOwn)
				{
					swigCMemOwn = false;
					yarpPINVOKE.delete_Port(swigCPtr);
				}
				swigCPtr = new HandleRef(null, IntPtr.Zero);
				GC.SuppressFinalize(this);
				base.Dispose();
			}
		}

		public Port()
			: this(yarpPINVOKE.new_Port(), true)
		{
		}

		public override bool addOutput(string name)
		{
			bool ret = yarpPINVOKE.Port_addOutput__SWIG_0(swigCPtr, name);
			return ret;
		}

		public override bool addOutput(string name, string carrier)
		{
			bool ret = yarpPINVOKE.Port_addOutput__SWIG_1(swigCPtr, name, carrier);
			return ret;
		}

		public override bool addOutput(Contact contact)
		{
			bool ret = yarpPINVOKE.Port_addOutput__SWIG_2(swigCPtr, Contact.getCPtr(contact));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public override void close()
		{
			yarpPINVOKE.Port_close(swigCPtr);
		}

		public override void interrupt()
		{
			yarpPINVOKE.Port_interrupt(swigCPtr);
		}

		public override Contact where()
		{
			Contact ret = new Contact(yarpPINVOKE.Port_where(swigCPtr), true);
			return ret;
		}

		public new bool write(PortWriter writer, PortWriter callback)
		{
			bool ret = yarpPINVOKE.Port_write__SWIG_0(swigCPtr, PortWriter.getCPtr(writer), PortWriter.getCPtr(callback));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public new bool write(PortWriter writer)
		{
			bool ret = yarpPINVOKE.Port_write__SWIG_1(swigCPtr, PortWriter.getCPtr(writer));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public new bool write(PortWriter writer, PortReader reader, PortWriter callback)
		{
			bool ret = yarpPINVOKE.Port_write__SWIG_2(swigCPtr, PortWriter.getCPtr(writer), PortReader.getCPtr(reader), PortWriter.getCPtr(callback));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public new bool write(PortWriter writer, PortReader reader)
		{
			bool ret = yarpPINVOKE.Port_write__SWIG_3(swigCPtr, PortWriter.getCPtr(writer), PortReader.getCPtr(reader));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public new bool read(PortReader reader, bool willReply)
		{
			bool ret = yarpPINVOKE.Port_read__SWIG_0(swigCPtr, PortReader.getCPtr(reader), willReply);
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public new bool read(PortReader reader)
		{
			bool ret = yarpPINVOKE.Port_read__SWIG_1(swigCPtr, PortReader.getCPtr(reader));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public bool reply(PortWriter writer)
		{
			bool ret = yarpPINVOKE.Port_reply(swigCPtr, PortWriter.getCPtr(writer));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public void setReader(PortReader reader)
		{
			yarpPINVOKE.Port_setReader(swigCPtr, PortReader.getCPtr(reader));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
		}

		public void setReaderCreator(PortReaderCreator creator)
		{
			yarpPINVOKE.Port_setReaderCreator(swigCPtr, PortReaderCreator.getCPtr(creator));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
		}

		public void enableBackgroundWrite(bool backgroundFlag)
		{
			yarpPINVOKE.Port_enableBackgroundWrite(swigCPtr, backgroundFlag);
		}

		public bool isWriting()
		{
			bool ret = yarpPINVOKE.Port_isWriting(swigCPtr);
			return ret;
		}

		public override bool setEnvelope(PortWriter envelope)
		{
			bool ret = yarpPINVOKE.Port_setEnvelope(swigCPtr, PortWriter.getCPtr(envelope));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public override bool getEnvelope(PortReader envelope)
		{
			bool ret = yarpPINVOKE.Port_getEnvelope(swigCPtr, PortReader.getCPtr(envelope));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public override int getInputCount()
		{
			int ret = yarpPINVOKE.Port_getInputCount(swigCPtr);
			return ret;
		}

		public override int getOutputCount()
		{
			int ret = yarpPINVOKE.Port_getOutputCount(swigCPtr);
			return ret;
		}

		public override void getReport(PortReport reporter)
		{
			yarpPINVOKE.Port_getReport(swigCPtr, PortReport.getCPtr(reporter));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
		}

		public override void setReporter(PortReport reporter)
		{
			yarpPINVOKE.Port_setReporter(swigCPtr, PortReport.getCPtr(reporter));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
		}

		public void setAdminMode(bool adminMode)
		{
			yarpPINVOKE.Port_setAdminMode__SWIG_0(swigCPtr, adminMode);
		}

		public void setAdminMode()
		{
			yarpPINVOKE.Port_setAdminMode__SWIG_1(swigCPtr);
		}

		public new bool write(Bottle data)
		{
			bool ret = yarpPINVOKE.Port_write__SWIG_4(swigCPtr, Bottle.getCPtr(data));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public new bool write(Property data)
		{
			bool ret = yarpPINVOKE.Port_write__SWIG_5(swigCPtr, Property.getCPtr(data));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public new bool write(ImageRgb data)
		{
			bool ret = yarpPINVOKE.Port_write__SWIG_6(swigCPtr, ImageRgb.getCPtr(data));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public new bool write(ImageFloat data)
		{
			bool ret = yarpPINVOKE.Port_write__SWIG_7(swigCPtr, ImageFloat.getCPtr(data));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public new bool write(Bottle data1, Bottle data2)
		{
			bool ret = yarpPINVOKE.Port_write__SWIG_8(swigCPtr, Bottle.getCPtr(data1), Bottle.getCPtr(data2));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

	}
}