/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Yarp
{
	public class PortWriterBufferBase : IDisposable
	{
		private HandleRef swigCPtr;
		protected bool swigCMemOwn;

		internal PortWriterBufferBase(IntPtr cPtr, bool cMemoryOwn)
		{
			swigCMemOwn = cMemoryOwn;
			swigCPtr = new HandleRef(this, cPtr);
		}

		internal static HandleRef getCPtr(PortWriterBufferBase obj)
		{
			return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
		}

		~PortWriterBufferBase()
		{
			Dispose();
		}

		public virtual void Dispose()
		{
			lock (this)
			{
				if (swigCPtr.Handle != IntPtr.Zero && swigCMemOwn)
				{
					swigCMemOwn = false;
					yarpPINVOKE.delete_PortWriterBufferBase(swigCPtr);
				}
				swigCPtr = new HandleRef(null, IntPtr.Zero);
				GC.SuppressFinalize(this);
			}
		}

		public virtual PortWriterWrapper create(PortWriterBufferManager man, SWIGTYPE_p_void tracker)
		{
			IntPtr cPtr = yarpPINVOKE.PortWriterBufferBase_create(swigCPtr, PortWriterBufferManager.getCPtr(man), SWIGTYPE_p_void.getCPtr(tracker));
			PortWriterWrapper ret = (cPtr == IntPtr.Zero) ? null : new PortWriterWrapper(cPtr, false);
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public SWIGTYPE_p_void getContent()
		{
			IntPtr cPtr = yarpPINVOKE.PortWriterBufferBase_getContent(swigCPtr);
			SWIGTYPE_p_void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
			return ret;
		}

		public int getCount()
		{
			int ret = yarpPINVOKE.PortWriterBufferBase_getCount(swigCPtr);
			return ret;
		}

		public void attach(Port port)
		{
			yarpPINVOKE.PortWriterBufferBase_attach(swigCPtr, Port.getCPtr(port));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
		}

		public void write(bool strict)
		{
			yarpPINVOKE.PortWriterBufferBase_write(swigCPtr, strict);
		}

	}
}