/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Yarp
{
	public class IEncodersRaw : IDisposable
	{
		private HandleRef swigCPtr;
		protected bool swigCMemOwn;

		internal IEncodersRaw(IntPtr cPtr, bool cMemoryOwn)
		{
			swigCMemOwn = cMemoryOwn;
			swigCPtr = new HandleRef(this, cPtr);
		}

		internal static HandleRef getCPtr(IEncodersRaw obj)
		{
			return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
		}

		~IEncodersRaw()
		{
			Dispose();
		}

		public virtual void Dispose()
		{
			lock (this)
			{
				if (swigCPtr.Handle != IntPtr.Zero && swigCMemOwn)
				{
					swigCMemOwn = false;
					yarpPINVOKE.delete_IEncodersRaw(swigCPtr);
				}
				swigCPtr = new HandleRef(null, IntPtr.Zero);
				GC.SuppressFinalize(this);
			}
		}

		public virtual bool getAxes(SWIGTYPE_p_int ax)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_getAxes(swigCPtr, SWIGTYPE_p_int.getCPtr(ax));
			return ret;
		}

		public virtual bool resetEncoderRaw(int j)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_resetEncoderRaw(swigCPtr, j);
			return ret;
		}

		public virtual bool resetEncodersRaw()
		{
			bool ret = yarpPINVOKE.IEncodersRaw_resetEncodersRaw(swigCPtr);
			return ret;
		}

		public virtual bool setEncoderRaw(int j, double val)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_setEncoderRaw(swigCPtr, j, val);
			return ret;
		}

		public virtual bool setEncodersRaw(SWIGTYPE_p_double vals)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_setEncodersRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(vals));
			return ret;
		}

		public virtual bool getEncoderRaw(int j, SWIGTYPE_p_double v)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_getEncoderRaw(swigCPtr, j, SWIGTYPE_p_double.getCPtr(v));
			return ret;
		}

		public virtual bool getEncodersRaw(SWIGTYPE_p_double encs)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_getEncodersRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(encs));
			return ret;
		}

		public virtual bool getEncoderSpeedRaw(int j, SWIGTYPE_p_double sp)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_getEncoderSpeedRaw(swigCPtr, j, SWIGTYPE_p_double.getCPtr(sp));
			return ret;
		}

		public virtual bool getEncoderSpeedsRaw(SWIGTYPE_p_double spds)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_getEncoderSpeedsRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(spds));
			return ret;
		}

		public virtual bool getEncoderAccelerationRaw(int j, SWIGTYPE_p_double spds)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_getEncoderAccelerationRaw(swigCPtr, j, SWIGTYPE_p_double.getCPtr(spds));
			return ret;
		}

		public virtual bool getEncoderAccelerationsRaw(SWIGTYPE_p_double accs)
		{
			bool ret = yarpPINVOKE.IEncodersRaw_getEncoderAccelerationsRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(accs));
			return ret;
		}

	}
}