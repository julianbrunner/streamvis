/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Yarp
{
	public class PolyDriver : DeviceDriver
	{
		private HandleRef swigCPtr;

		internal PolyDriver(IntPtr cPtr, bool cMemoryOwn)
			: base(yarpPINVOKE.PolyDriverUpcast(cPtr), cMemoryOwn)
		{
			swigCPtr = new HandleRef(this, cPtr);
		}

		internal static HandleRef getCPtr(PolyDriver obj)
		{
			return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
		}

		~PolyDriver()
		{
			Dispose();
		}

		public override void Dispose()
		{
			lock (this)
			{
				if (swigCPtr.Handle != IntPtr.Zero && swigCMemOwn)
				{
					swigCMemOwn = false;
					yarpPINVOKE.delete_PolyDriver(swigCPtr);
				}
				swigCPtr = new HandleRef(null, IntPtr.Zero);
				GC.SuppressFinalize(this);
				base.Dispose();
			}
		}

		public PolyDriver()
			: this(yarpPINVOKE.new_PolyDriver__SWIG_0(), true)
		{
		}

		public PolyDriver(string txt)
			: this(yarpPINVOKE.new_PolyDriver__SWIG_1(txt), true)
		{
		}

		public PolyDriver(Searchable config)
			: this(yarpPINVOKE.new_PolyDriver__SWIG_2(Searchable.getCPtr(config)), true)
		{
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
		}

		public bool open(string txt)
		{
			bool ret = yarpPINVOKE.PolyDriver_open__SWIG_0(swigCPtr, txt);
			return ret;
		}

		public override bool open(Searchable config)
		{
			bool ret = yarpPINVOKE.PolyDriver_open__SWIG_1(swigCPtr, Searchable.getCPtr(config));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public bool link(PolyDriver alt)
		{
			bool ret = yarpPINVOKE.PolyDriver_link(swigCPtr, PolyDriver.getCPtr(alt));
			if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
			return ret;
		}

		public DeviceDriver take()
		{
			IntPtr cPtr = yarpPINVOKE.PolyDriver_take(swigCPtr);
			DeviceDriver ret = (cPtr == IntPtr.Zero) ? null : new DeviceDriver(cPtr, false);
			return ret;
		}

		public override bool close()
		{
			bool ret = yarpPINVOKE.PolyDriver_close(swigCPtr);
			return ret;
		}

		public bool isValid()
		{
			bool ret = yarpPINVOKE.PolyDriver_isValid(swigCPtr);
			return ret;
		}

		public Bottle getOptions()
		{
			Bottle ret = new Bottle(yarpPINVOKE.PolyDriver_getOptions(swigCPtr), true);
			return ret;
		}

		public ConstString getComment(string option)
		{
			ConstString ret = new ConstString(yarpPINVOKE.PolyDriver_getComment(swigCPtr, option), true);
			return ret;
		}

		public Value getDefaultValue(string option)
		{
			Value ret = new Value(yarpPINVOKE.PolyDriver_getDefaultValue(swigCPtr, option), true);
			return ret;
		}

		public Value getValue(string option)
		{
			Value ret = new Value(yarpPINVOKE.PolyDriver_getValue(swigCPtr, option), true);
			return ret;
		}

		public IFrameGrabberImage viewFrameGrabberImage()
		{
			IntPtr cPtr = yarpPINVOKE.PolyDriver_viewFrameGrabberImage(swigCPtr);
			IFrameGrabberImage ret = (cPtr == IntPtr.Zero) ? null : new IFrameGrabberImage(cPtr, false);
			return ret;
		}

		public IPositionControl viewIPositionControl()
		{
			IntPtr cPtr = yarpPINVOKE.PolyDriver_viewIPositionControl(swigCPtr);
			IPositionControl ret = (cPtr == IntPtr.Zero) ? null : new IPositionControl(cPtr, false);
			return ret;
		}

		public IVelocityControl viewIVelocityControl()
		{
			IntPtr cPtr = yarpPINVOKE.PolyDriver_viewIVelocityControl(swigCPtr);
			IVelocityControl ret = (cPtr == IntPtr.Zero) ? null : new IVelocityControl(cPtr, false);
			return ret;
		}

		public IEncoders viewIEncoders()
		{
			IntPtr cPtr = yarpPINVOKE.PolyDriver_viewIEncoders(swigCPtr);
			IEncoders ret = (cPtr == IntPtr.Zero) ? null : new IEncoders(cPtr, false);
			return ret;
		}

		public IPidControl viewIPidControl()
		{
			IntPtr cPtr = yarpPINVOKE.PolyDriver_viewIPidControl(swigCPtr);
			IPidControl ret = (cPtr == IntPtr.Zero) ? null : new IPidControl(cPtr, false);
			return ret;
		}

		public IAmplifierControl viewIAmplifierControl()
		{
			IntPtr cPtr = yarpPINVOKE.PolyDriver_viewIAmplifierControl(swigCPtr);
			IAmplifierControl ret = (cPtr == IntPtr.Zero) ? null : new IAmplifierControl(cPtr, false);
			return ret;
		}

		public IControlLimits viewIControlLimits()
		{
			IntPtr cPtr = yarpPINVOKE.PolyDriver_viewIControlLimits(swigCPtr);
			IControlLimits ret = (cPtr == IntPtr.Zero) ? null : new IControlLimits(cPtr, false);
			return ret;
		}

	}
}