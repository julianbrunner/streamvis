- Specification:
	14x 800Hz 70%
	8x 120Hz 20%

- Performance
	1. Idle Performance (8 hidden 120Hz streams)
		- 50% in and below Yarp.Wrapper
		!- 20% DrawLine and DrawNumber
		!- 10% GL.SwapBuffers
		(Could be improved by using buffer copying functions for text printing)
	2. Load Performance
		(Could be improved by shortening the DataEntry transformation pipeline (less enumerations))
		(Could be improved by optimizing DataEntry to Point transformation)
		(Could be improved by finding a faster way to draw a LineStrip than with GL.Vertex2 calls)

- Peformance 2
	14x 800Hz
	- ACE_OS_Thread_Adapter::invoke(void)	18.89
	- Yarp.Wrapper memory management		14.18
	- ReadLoop								 8.50
	- Yarp.Wrapper in ReadLoop				 7.50
	- FittingValueManager.Update()			 5.14
	- Drawing								31.59
	- Transformation						10.00
	
	Yarp.Wrapper and below: 40.57

Windows:
	38x1000Hz, local, 38 flat										10%
	38x1000Hz, local, 2 flat, 4*9 nested							30%
	38x800Hz, network, 2 flat, 4*9 nested							50%
	38x1000Hz, local, 38 flat, Receiver								10%
		37.30%	Yarp.Value.Finalize()
		27.81%	sharpyarp.dll (many small calls to ACE)
		20.69%	Yarp.Bottle.get(int32)
		 2.90%	Yarp.Value.asDouble()
		 2.90%	Yarp.BufferedPortBottle.read()
		 1.62%	Yarp.Bottle.Finalize()
		------
		93.22%
	38x1000Hz, local, 38 flat, yarp read > NUL							 0%